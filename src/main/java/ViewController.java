/*
 * ViewControlller.java
 *
 * Created on 11 January 2016, 7:08 PM
 */

package pc2project;

import java.awt.Container;
import java.awt.Component;
import java.awt.Font;
/**
 *
 * @author  91025973
 */
public class ViewController extends javax.swing.JFrame {

    String userInput = "";      // the input shown as the user presses buttons
    
    boolean decimal = false;    // used to toggle state when the decimal button is used
    
    Model model;    // declaring an instance of the model class;
    
    
    /** Creates new form ViewControlller */
    public ViewController() {
        model = new Model();  // instantiating model of the Model class
        initComponents();
        initializeGUI();    // set up default GUI states        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msgMessage = new javax.swing.JOptionPane();
        msgHelpMenu = new javax.swing.JOptionPane();
        bgrDegreesRadians = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        txtOutput = new javax.swing.JTextField();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnMultiply = new javax.swing.JButton();
        btnDivide = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnMinus = new javax.swing.JButton();
        btnDecimal = new javax.swing.JButton();
        btnEquals = new javax.swing.JButton();
        btn1OverX = new javax.swing.JButton();
        btnExponents = new javax.swing.JButton();
        btnPlusOrMinus = new javax.swing.JButton();
        btnFactorial = new javax.swing.JButton();
        btnCA = new javax.swing.JButton();
        btnCE = new javax.swing.JButton();
        jpnlAdvanced = new javax.swing.JPanel();
        radDegrees = new javax.swing.JRadioButton();
        radRadians = new javax.swing.JRadioButton();
        btnSin = new javax.swing.JButton();
        btnAsin = new javax.swing.JButton();
        btnCos = new javax.swing.JButton();
        btnAcos = new javax.swing.JButton();
        btnTan = new javax.swing.JButton();
        btnAtan = new javax.swing.JButton();
        btnPi = new javax.swing.JButton();
        btnE = new javax.swing.JButton();
        mnuMenu = new javax.swing.JMenuBar();
        mnuView = new javax.swing.JMenu();
        mnuBasic = new javax.swing.JCheckBoxMenuItem();
        mnuAdvanced = new javax.swing.JCheckBoxMenuItem();
        mnuFont = new javax.swing.JMenu();
        mnuPlain = new javax.swing.JCheckBoxMenuItem();
        mnuBold = new javax.swing.JCheckBoxMenuItem();
        mnuRound = new javax.swing.JMenu();
        mnu0 = new javax.swing.JMenuItem();
        mnu1 = new javax.swing.JMenuItem();
        mnu2 = new javax.swing.JMenuItem();
        mnu3 = new javax.swing.JMenuItem();
        mnu4 = new javax.swing.JMenuItem();
        mnu5 = new javax.swing.JMenuItem();
        mnu6 = new javax.swing.JMenuItem();
        mnu7 = new javax.swing.JMenuItem();
        mnu8 = new javax.swing.JMenuItem();
        mnu9 = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mnuHotKeys = new javax.swing.JMenuItem();
        mnuAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CpCalculator");
        setResizable(false);

        jPanel1.setLayout(null);

        txtOutput.setBackground(new java.awt.Color(255, 255, 255));
        txtOutput.setEditable(false);
        txtOutput.setText("0.0");
        jPanel1.add(txtOutput);
        txtOutput.setBounds(40, 40, 380, 50);

        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        jPanel1.add(btn1);
        btn1.setBounds(40, 110, 60, 50);

        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        jPanel1.add(btn2);
        btn2.setBounds(120, 110, 60, 50);

        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });
        jPanel1.add(btn3);
        btn3.setBounds(200, 110, 60, 50);

        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });
        jPanel1.add(btn4);
        btn4.setBounds(40, 180, 60, 50);

        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });
        jPanel1.add(btn5);
        btn5.setBounds(120, 180, 60, 50);

        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });
        jPanel1.add(btn6);
        btn6.setBounds(200, 180, 60, 50);

        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });
        jPanel1.add(btn7);
        btn7.setBounds(40, 250, 60, 50);

        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });
        jPanel1.add(btn8);
        btn8.setBounds(120, 250, 60, 50);

        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });
        jPanel1.add(btn9);
        btn9.setBounds(200, 250, 60, 50);

        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });
        jPanel1.add(btn0);
        btn0.setBounds(40, 320, 60, 50);

        btnMultiply.setText("*");
        btnMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplyActionPerformed(evt);
            }
        });
        jPanel1.add(btnMultiply);
        btnMultiply.setBounds(280, 110, 60, 50);

        btnDivide.setText("/");
        btnDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivideActionPerformed(evt);
            }
        });
        jPanel1.add(btnDivide);
        btnDivide.setBounds(280, 180, 60, 50);

        btnAdd.setText("+");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd);
        btnAdd.setBounds(280, 250, 60, 50);

        btnMinus.setText("-");
        btnMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinusActionPerformed(evt);
            }
        });
        jPanel1.add(btnMinus);
        btnMinus.setBounds(280, 320, 60, 50);

        btnDecimal.setText(".");
        btnDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecimalActionPerformed(evt);
            }
        });
        jPanel1.add(btnDecimal);
        btnDecimal.setBounds(120, 320, 60, 50);

        btnEquals.setText("=");
        btnEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqualsActionPerformed(evt);
            }
        });
        jPanel1.add(btnEquals);
        btnEquals.setBounds(200, 320, 60, 50);

        btn1OverX.setText("1/x");
        btn1OverX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1OverXActionPerformed(evt);
            }
        });
        jPanel1.add(btn1OverX);
        btn1OverX.setBounds(360, 110, 60, 50);

        btnExponents.setText("x^n");
        btnExponents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExponentsActionPerformed(evt);
            }
        });
        jPanel1.add(btnExponents);
        btnExponents.setBounds(360, 180, 60, 50);

        btnPlusOrMinus.setText("+/-");
        btnPlusOrMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusOrMinusActionPerformed(evt);
            }
        });
        jPanel1.add(btnPlusOrMinus);
        btnPlusOrMinus.setBounds(360, 250, 60, 50);

        btnFactorial.setText("x!");
        btnFactorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFactorialActionPerformed(evt);
            }
        });
        jPanel1.add(btnFactorial);
        btnFactorial.setBounds(360, 320, 60, 50);

        btnCA.setText("CA");
        btnCA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCAActionPerformed(evt);
            }
        });
        jPanel1.add(btnCA);
        btnCA.setBounds(40, 390, 140, 50);

        btnCE.setText("CE");
        btnCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCEActionPerformed(evt);
            }
        });
        jPanel1.add(btnCE);
        btnCE.setBounds(200, 390, 140, 50);

        jpnlAdvanced.setLayout(null);

        bgrDegreesRadians.add(radDegrees);
        radDegrees.setSelected(true);
        radDegrees.setText("Degrees");
        radDegrees.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radDegreesItemStateChanged(evt);
            }
        });
        jpnlAdvanced.add(radDegrees);
        radDegrees.setBounds(10, 60, 80, 23);

        bgrDegreesRadians.add(radRadians);
        radRadians.setText("Radians");
        radRadians.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radRadiansItemStateChanged(evt);
            }
        });
        jpnlAdvanced.add(radRadians);
        radRadians.setBounds(90, 60, 80, 23);

        btnSin.setText("sin");
        btnSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSinActionPerformed(evt);
            }
        });
        jpnlAdvanced.add(btnSin);
        btnSin.setBounds(10, 110, 70, 50);

        btnAsin.setText("asin");
        btnAsin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsinActionPerformed(evt);
            }
        });
        jpnlAdvanced.add(btnAsin);
        btnAsin.setBounds(100, 110, 70, 50);

        btnCos.setText("cos");
        btnCos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCosActionPerformed(evt);
            }
        });
        jpnlAdvanced.add(btnCos);
        btnCos.setBounds(10, 180, 70, 50);

        btnAcos.setText("acos");
        btnAcos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcosActionPerformed(evt);
            }
        });
        jpnlAdvanced.add(btnAcos);
        btnAcos.setBounds(100, 180, 70, 50);

        btnTan.setText("tan");
        btnTan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTanActionPerformed(evt);
            }
        });
        jpnlAdvanced.add(btnTan);
        btnTan.setBounds(10, 250, 70, 50);

        btnAtan.setText("atan");
        btnAtan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtanActionPerformed(evt);
            }
        });
        jpnlAdvanced.add(btnAtan);
        btnAtan.setBounds(100, 250, 70, 50);

        btnPi.setText("PI");
        btnPi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPiActionPerformed(evt);
            }
        });
        jpnlAdvanced.add(btnPi);
        btnPi.setBounds(10, 320, 70, 50);

        btnE.setText("E");
        btnE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEActionPerformed(evt);
            }
        });
        jpnlAdvanced.add(btnE);
        btnE.setBounds(100, 320, 70, 50);

        mnuView.setText("View");

        mnuBasic.setSelected(true);
        mnuBasic.setText("Basic");
        mnuBasic.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mnuBasicItemStateChanged(evt);
            }
        });
        mnuView.add(mnuBasic);

        mnuAdvanced.setText("Advanced");
        mnuAdvanced.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mnuAdvancedItemStateChanged(evt);
            }
        });
        mnuView.add(mnuAdvanced);

        mnuMenu.add(mnuView);

        mnuFont.setText("Font");

        mnuPlain.setSelected(true);
        mnuPlain.setText("Plain");
        mnuPlain.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mnuPlainItemStateChanged(evt);
            }
        });
        mnuFont.add(mnuPlain);

        mnuBold.setText("Bold");
        mnuBold.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mnuBoldItemStateChanged(evt);
            }
        });
        mnuFont.add(mnuBold);

        mnuMenu.add(mnuFont);

        mnuRound.setText("Round");

        mnu0.setText("0");
        mnu0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu0ActionPerformed(evt);
            }
        });
        mnuRound.add(mnu0);

        mnu1.setText("1");
        mnu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu1ActionPerformed(evt);
            }
        });
        mnuRound.add(mnu1);

        mnu2.setText("2");
        mnu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu2ActionPerformed(evt);
            }
        });
        mnuRound.add(mnu2);

        mnu3.setText("3");
        mnu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu3ActionPerformed(evt);
            }
        });
        mnuRound.add(mnu3);

        mnu4.setText("4");
        mnu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu4ActionPerformed(evt);
            }
        });
        mnuRound.add(mnu4);

        mnu5.setText("5");
        mnu5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu5ActionPerformed(evt);
            }
        });
        mnuRound.add(mnu5);

        mnu6.setText("6");
        mnu6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu6ActionPerformed(evt);
            }
        });
        mnuRound.add(mnu6);

        mnu7.setText("7");
        mnu7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu7ActionPerformed(evt);
            }
        });
        mnuRound.add(mnu7);

        mnu8.setText("8");
        mnu8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu8ActionPerformed(evt);
            }
        });
        mnuRound.add(mnu8);

        mnu9.setText("9");
        mnu9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnu9ActionPerformed(evt);
            }
        });
        mnuRound.add(mnu9);

        mnuMenu.add(mnuRound);

        mnuHelp.setText("Help");

        mnuHotKeys.setText("Hot Keys");
        mnuHotKeys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuHotKeysActionPerformed(evt);
            }
        });
        mnuHelp.add(mnuHotKeys);

        mnuAbout.setText("About");
        mnuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAboutActionPerformed(evt);
            }
        });
        mnuHelp.add(mnuAbout);

        mnuMenu.add(mnuHelp);

        setJMenuBar(mnuMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnlAdvanced, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpnlAdvanced, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
// --------------------GUI Display Methods--------------------------------------
// this method is for setting up the default GUI states
    private void initializeGUI() {
        this.setSize(475, 530);
        mnuBasic.setState(true);
        jpnlAdvanced.setVisible(false);
        mnuPlain.setSelected(true);
        model.setDegrees(true);
    }

    // this method is used after an operand is set, to ready the GUI for the next operand or operator
    private void operandIsSet() {
        txtOutput.setText("");
        userInput = "";
        decimal = false;
    }

    // changes txtOutput back to it's blank default state, does not reset operations that have already been performed or reset operator
    private void clearEntry() {
        userInput = "";
        if (!model.getOperand1().equals("")) {
            txtOutput.setText(model.getOperand1());
        } else {
            txtOutput.setText("0.0");
        }
        decimal = false;
    }

    // changes txtOutput back to its default state and resets all stored variables back to an empty or default state
    private void clearView() {
        userInput = "";
        txtOutput.setText("0.0");    
        decimal = false;
        model.clearAll();
    }

    // used by event handlers to update txtOutput as buttons are pressed
    private void displayUpdator(String number) {
        userInput += number;
        txtOutput.setText(userInput);
    }

// ----------------------Menu Bar Methods---------------------------------------
private void fontChanger(Container content, Font newFont) {
    // Container container = this.getContentPane();     // gets the content pane of the container parameter, which contains the components
    Component[] list = content.getComponents();         // makes an array of all the components in the content argument 
    for(Component item:list) {                          // iterate over each component item in the list array
        // System.out.println(item);
        if (item instanceof Container) {                // if the component is another container, call the fontChanger method again to recurse through all components
            fontChanger((Container)item, newFont);        
            item.setFont(newFont);           
        }
    }
}

// -----------------Menu Bar Event Handler Methods------------------------------
private void mnuHotKeysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuHotKeysActionPerformed
    msgHelpMenu.showMessageDialog(this, "+ - addtion\n- - subtraction\n* - multiplication\n" +
            "\\ - division\n\ns - sin\nS - arcsin\nc - cos\nC - arccos\nt - tan\nT - arctan\n\n" +
            "i - inverse\nm - +/-\n^ - power\n! - factorial\n\nd - clear all(CA)\nD - clear entry(CE)\n\n" +
            "Digits 0 - 9 can be entered from the \nkeypad or the keyboard's digit keys.", "Hot Keys", javax.swing.JOptionPane.INFORMATION_MESSAGE);
}//GEN-LAST:event_mnuHotKeysActionPerformed
// displays the About dialog window
private void mnuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAboutActionPerformed
    msgHelpMenu.showMessageDialog(this, "CpCalculator\nVersion 1.2.3_456\nJanuary 2016\n\n" +
            "Created by Samuel Wilson 91025973", "About", javax.swing.JOptionPane.INFORMATION_MESSAGE);
}//GEN-LAST:event_mnuAboutActionPerformed

// the mnuBasic and mnuAdvanced event handlers are designed so that only one checkbox can be selected at a time
// mnuBasic and mnuAdvanced toggle the GUI between the basic and advanced states
private void mnuBasicItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mnuBasicItemStateChanged
    if(mnuBasic.isSelected()) {
        this.setSize(475, 530);
        jpnlAdvanced.setVisible(false);
        mnuAdvanced.setSelected(false);
    } else if(!mnuAdvanced.isSelected()) {
        mnuBasic.setSelected(true);
    }
}//GEN-LAST:event_mnuBasicItemStateChanged

// the mnuBasic and mnuAdvanced event handlers are designed so that only one checkbox can be selected at a time
// mnuBasic and mnuAdvanced toggle the GUI between the basic and advanced states
private void mnuAdvancedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mnuAdvancedItemStateChanged
    if(mnuAdvanced.isSelected()) {
        this.setSize(645, 530);
        jpnlAdvanced.setVisible(true);
        mnuBasic.setSelected(false);
    } else if(!mnuBasic.isSelected()) {
        mnuAdvanced.setSelected(true);
    }
}//GEN-LAST:event_mnuAdvancedItemStateChanged

// the mnuPlain and mnuBold event handlers are designed so that only one checkbox can be selected at a time
// mnuPlain and mnuBold toggle the GUI buttons, labels, and text box between plain and bold font states
private void mnuPlainItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mnuPlainItemStateChanged
    if(mnuPlain.isSelected()) {
        mnuBold.setSelected(false);        
        Font oldFont = txtOutput.getFont();    // gets the current font and assigns to oldFont
        Font newFont = new Font(oldFont.getName(), Font.PLAIN, oldFont.getSize());   // creates a new font in PLAIN with the same size
        fontChanger(this.getContentPane(), newFont);    
        //txtOutput.setFont(newFont); // sets txtOutput to the new font 
    } else if(!mnuBold.isSelected()) {
        mnuPlain.setSelected(true);
    }
}//GEN-LAST:event_mnuPlainItemStateChanged

// the mnuPlain and mnuBold event handlers are designed so that only one checkbox can be selected at a time
// mnuPlain and mnuBold toggle the GUI buttons, labels, and text box between plain and bold font states
private void mnuBoldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mnuBoldItemStateChanged
    if(mnuBold.isSelected()) {
        mnuPlain.setSelected(false);        
        Font oldFont = txtOutput.getFont();    // gets the current font and assings to oldFont
        Font newFont = new Font(oldFont.getName(), Font.BOLD, oldFont.getSize());    // creates a new font in BOLD with the same size
        fontChanger(this.getContentPane(), newFont);
        //txtOutput.setFont(newFont); //sets txtOutput to the new font
    } else if(!mnuPlain.isSelected()) {
        mnuBold.setSelected(true);
    }
}//GEN-LAST:event_mnuBoldItemStateChanged

// ----------------------Button Event Handler Methods---------------------------
private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
    displayUpdator("1");
}//GEN-LAST:event_btn1ActionPerformed

private void btnCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCEActionPerformed
    clearEntry();
}//GEN-LAST:event_btnCEActionPerformed

private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
    displayUpdator("2");
}//GEN-LAST:event_btn2ActionPerformed

private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
    displayUpdator("3");
}//GEN-LAST:event_btn3ActionPerformed

private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
    displayUpdator("4");
}//GEN-LAST:event_btn4ActionPerformed

private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
    displayUpdator("5");
}//GEN-LAST:event_btn5ActionPerformed

private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
    displayUpdator("6");
}//GEN-LAST:event_btn6ActionPerformed

private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
    displayUpdator("7");
}//GEN-LAST:event_btn7ActionPerformed

private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
    displayUpdator("8");
}//GEN-LAST:event_btn8ActionPerformed

private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
    displayUpdator("9");
}//GEN-LAST:event_btn9ActionPerformed

private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
    displayUpdator("0");
}//GEN-LAST:event_btn0ActionPerformed

private void btnDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecimalActionPerformed
    if (decimal == false) { // if a decimal is already in use, no more decimals should be possible
        decimal = true;
        displayUpdator(".");
        model.setDecimal();
    }
}//GEN-LAST:event_btnDecimalActionPerformed

private void btnMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplyActionPerformed
    model.setOperator("*");
    model.setOperand(txtOutput.getText());
    operandIsSet();
}//GEN-LAST:event_btnMultiplyActionPerformed

private void btnDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivideActionPerformed
    model.setOperator("/");
    model.setOperand(txtOutput.getText());
    operandIsSet();
}//GEN-LAST:event_btnDivideActionPerformed

private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
    model.setOperator("+");
    model.setOperand(txtOutput.getText());
    operandIsSet();
}//GEN-LAST:event_btnAddActionPerformed

private void btnMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinusActionPerformed
    model.setOperator("-");
    model.setOperand(txtOutput.getText());
    operandIsSet();
}//GEN-LAST:event_btnMinusActionPerformed

private void btnEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualsActionPerformed
    try {
        model.setOperand(txtOutput.getText());
        if(!model.getOperand1().equals("0.0") && model.getOperand2().equals("0.0") && !model.getOperatorState()) {   // test to see if one of the operands is an empty string, then call the appropriate overloaded method
            txtOutput.setText(model.calculate(model.getOperand1()));
        } else {
            txtOutput.setText(model.calculate(model.getOperand1(), model.getOperand2()));
        }
        model.clearAll();
    }
    catch(ArithmeticException ae) {
        msgMessage.showMessageDialog(this, "ERROR: Divide by zero", "Error message", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_btnEqualsActionPerformed

private void btnCAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCAActionPerformed
    clearView();
}//GEN-LAST:event_btnCAActionPerformed

private void btnPlusOrMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusOrMinusActionPerformed
    txtOutput.setText(model.plusOrMinus(txtOutput.getText()));
}//GEN-LAST:event_btnPlusOrMinusActionPerformed

private void btnExponentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExponentsActionPerformed
    model.setOperator("^");
    model.setOperand(txtOutput.getText());
    operandIsSet();
}//GEN-LAST:event_btnExponentsActionPerformed

private void btnFactorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFactorialActionPerformed
    try {
        model.setOperand(txtOutput.getText());
        txtOutput.setText(model.factorial(model.getOperand1()));
    }
    catch(ArithmeticException ae) {
        msgMessage.showMessageDialog(this, "ERROR: Must be a positive integer between 0 and 20", "Error message", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    catch(NumberFormatException nfe) {
        msgMessage.showMessageDialog(this, "ERROR: Must be a positive integer between 0 and 20", "Error message", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
        
}//GEN-LAST:event_btnFactorialActionPerformed

private void btn1OverXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1OverXActionPerformed
    try {
        model.setOperand(txtOutput.getText());
        txtOutput.setText(model.oneOverX(model.getOperand1()));
    }
    catch(ArithmeticException ae) {
        msgMessage.showMessageDialog(this, "ERROR: Cannot divide by zero", "Error message", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_btn1OverXActionPerformed

private void mnu0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu0ActionPerformed
    txtOutput.setText(model.rounding(txtOutput.getText(), 0));
}//GEN-LAST:event_mnu0ActionPerformed

private void mnu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu1ActionPerformed
    txtOutput.setText(model.rounding(txtOutput.getText(), 1));
}//GEN-LAST:event_mnu1ActionPerformed

private void mnu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu2ActionPerformed
    txtOutput.setText(model.rounding(txtOutput.getText(), 2));
}//GEN-LAST:event_mnu2ActionPerformed

private void mnu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu3ActionPerformed
    txtOutput.setText(model.rounding(txtOutput.getText(), 3));
}//GEN-LAST:event_mnu3ActionPerformed

private void mnu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu4ActionPerformed
    txtOutput.setText(model.rounding(txtOutput.getText(), 4));
}//GEN-LAST:event_mnu4ActionPerformed

private void mnu5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu5ActionPerformed
    txtOutput.setText(model.rounding(txtOutput.getText(), 5));
}//GEN-LAST:event_mnu5ActionPerformed

private void mnu6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu6ActionPerformed
    txtOutput.setText(model.rounding(txtOutput.getText(), 6));
}//GEN-LAST:event_mnu6ActionPerformed

private void mnu7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu7ActionPerformed
    txtOutput.setText(model.rounding(txtOutput.getText(), 7));
}//GEN-LAST:event_mnu7ActionPerformed

private void mnu8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu8ActionPerformed
    txtOutput.setText(model.rounding(txtOutput.getText(), 8));
}//GEN-LAST:event_mnu8ActionPerformed

private void mnu9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnu9ActionPerformed
    txtOutput.setText(model.rounding(txtOutput.getText(), 9));
}//GEN-LAST:event_mnu9ActionPerformed

private void radDegreesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radDegreesItemStateChanged
    model.setDegrees(radDegrees.isSelected());
}//GEN-LAST:event_radDegreesItemStateChanged

private void radRadiansItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radRadiansItemStateChanged
    model.setRadians(radRadians.isSelected());
}//GEN-LAST:event_radRadiansItemStateChanged

private void btnSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSinActionPerformed
    model.resetTrigFunctions();
    model.setTrigFunction(1);   // sin is represented by 1 in setTrigFunction switch statement
    model.setOperand(txtOutput.getText());
    txtOutput.setText(model.trigCalculation(model.getOperand1()));
    model.clearAll();           // clear operand1, operand2, and operator variables allowing a second trigometry function to be called on the answer shown in txtOutput
}//GEN-LAST:event_btnSinActionPerformed

private void btnCosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCosActionPerformed
    model.resetTrigFunctions();
    model.setTrigFunction(2);   // cos is represented by 2 in setTrigFunction switch statement
    model.setOperand(txtOutput.getText());
    txtOutput.setText(model.trigCalculation(model.getOperand1()));
    model.clearAll();           // clear operand1, operand2, and operator variables allowing a second trigometry function to be called on the answer shown in txtOutput
}//GEN-LAST:event_btnCosActionPerformed

private void btnTanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTanActionPerformed
    model.resetTrigFunctions();
    model.setTrigFunction(3);   // tan is represented by 3 in setTrigFunction switch statement
    model.setOperand(txtOutput.getText());
    txtOutput.setText(model.trigCalculation(model.getOperand1()));
    model.clearAll();           // clear operand1, operand2, and operator variables allowing a second trigometry function to be called on the answer shown in txtOutput
}//GEN-LAST:event_btnTanActionPerformed

private void btnAsinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsinActionPerformed
    model.resetTrigFunctions();
    model.setTrigFunction(4);   // asin is represented by 4 in setTrigFunction switch statement
    model.setOperand(txtOutput.getText());
    txtOutput.setText(model.trigCalculation(model.getOperand1()));
    model.clearAll();           // clear operand1, operand2, and operator variables allowing a second trigometry function to be called on the answer shown in txtOutput
}//GEN-LAST:event_btnAsinActionPerformed

private void btnAcosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcosActionPerformed
    model.resetTrigFunctions();
    model.setTrigFunction(5);   // acos is represented by 5 in setTrigFunction switch statement
    model.setOperand(txtOutput.getText());
    txtOutput.setText(model.trigCalculation(model.getOperand1()));
    model.clearAll();           // clear operand1, operand2, and operator variables allowing a second trigometry function to be called on the answer shown in txtOutput
}//GEN-LAST:event_btnAcosActionPerformed

private void btnAtanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtanActionPerformed
    model.resetTrigFunctions();
    model.setTrigFunction(6);   // atan is represented by 6 in setTrigFunction switch statement
    model.setOperand(txtOutput.getText());
    txtOutput.setText(model.trigCalculation(model.getOperand1()));
    model.clearAll();           // clear operand1, operand2, and operator variables allowing a second trigometry function to be called on the answer shown in txtOutput
}//GEN-LAST:event_btnAtanActionPerformed

private void btnPiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPiActionPerformed
    txtOutput.setText(model.getPI());    
}//GEN-LAST:event_btnPiActionPerformed

private void btnEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEActionPerformed
    txtOutput.setText(model.getE());
}//GEN-LAST:event_btnEActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewController().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgrDegreesRadians;
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn1OverX;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnAcos;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAsin;
    private javax.swing.JButton btnAtan;
    private javax.swing.JButton btnCA;
    private javax.swing.JButton btnCE;
    private javax.swing.JButton btnCos;
    private javax.swing.JButton btnDecimal;
    private javax.swing.JButton btnDivide;
    private javax.swing.JButton btnE;
    private javax.swing.JButton btnEquals;
    private javax.swing.JButton btnExponents;
    private javax.swing.JButton btnFactorial;
    private javax.swing.JButton btnMinus;
    private javax.swing.JButton btnMultiply;
    private javax.swing.JButton btnPi;
    private javax.swing.JButton btnPlusOrMinus;
    private javax.swing.JButton btnSin;
    private javax.swing.JButton btnTan;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jpnlAdvanced;
    private javax.swing.JMenuItem mnu0;
    private javax.swing.JMenuItem mnu1;
    private javax.swing.JMenuItem mnu2;
    private javax.swing.JMenuItem mnu3;
    private javax.swing.JMenuItem mnu4;
    private javax.swing.JMenuItem mnu5;
    private javax.swing.JMenuItem mnu6;
    private javax.swing.JMenuItem mnu7;
    private javax.swing.JMenuItem mnu8;
    private javax.swing.JMenuItem mnu9;
    private javax.swing.JMenuItem mnuAbout;
    private javax.swing.JCheckBoxMenuItem mnuAdvanced;
    private javax.swing.JCheckBoxMenuItem mnuBasic;
    private javax.swing.JCheckBoxMenuItem mnuBold;
    private javax.swing.JMenu mnuFont;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JMenuItem mnuHotKeys;
    private javax.swing.JMenuBar mnuMenu;
    private javax.swing.JCheckBoxMenuItem mnuPlain;
    private javax.swing.JMenu mnuRound;
    private javax.swing.JMenu mnuView;
    private javax.swing.JOptionPane msgHelpMenu;
    private javax.swing.JOptionPane msgMessage;
    private javax.swing.JRadioButton radDegrees;
    private javax.swing.JRadioButton radRadians;
    private javax.swing.JTextField txtOutput;
    // End of variables declaration//GEN-END:variables

}
